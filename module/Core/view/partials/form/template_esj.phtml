<?php
/*
 * @author Joao Vicente Krzyzaniak <joaovicente@unochapeco.edu.br>
 * @author William Moterle <william_moterle@unochapeco.edu.br>
 * @author Cezar Souza <cezar08@unochapeco.edu.br>
 *
 * @params array $abas, array $tabela, array $partialElements, array $url, array $url_delete
 * @return void
 * Template para gerar formulários do ESJ
 */
?>
<head>
    <link rel="stylesheet" href='<?php echo BASE_URL ?>/js/grid/jqwidgets/styles/jqx.base.css' type="text/css" />
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/scripts/jquery-1.10.2.min.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxcore.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxbuttons.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxscrollbar.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxdatatable.js'></script> 
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxlistbox.js'></script> 
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxdropdownlist.js'></script> 
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxdata.js'></script> 
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxtooltip.js'></script> 
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/jqwidgets/jqxinput.js'></script> 
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/grid/scripts/demos.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/jquery.maskedinput.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/main.js'></script>
<!--    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/jquery.min.js'></script>-->
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/jquery-ui.js'></script>
    <script type="text/javascript" src='<?php echo BASE_URL ?>/js/jquery.maskMoney.min.js'></script>
    <script type="text/javascript">
        function grid(data_fields, columns, grid_name, url, url_delete) {
            var source =
                    {
                        dataType: "json",
                        dataFields: data_fields,
                        id: 'id',
                        url: url,
                        addRow: function(rowID, rowData, position, commit) {
                            $.post(url, rowData)
                                    .done(function(data) {
                                        var response = jQuery.parseJSON(data);
                                        if (response.error)
                                            alert(response.error);
                                    })
                                    .fail(function() {
                                        alert("Não foi possível conectar ao servidor");
                                    });
                            commit(true);
                        },
                        updateRow: function(rowID, rowData, commit) {
                            $.post(url, rowData)
                                    .done(function(data) {
                                        var response = jQuery.parseJSON(data);
                                        if (response.error)
                                            alert(response.error);
                                    })
                                    .fail(function() {
                                        alert("Não foi possível conectar ao servidor");
                                    });
                            commit(true);
                        },
                        deleteRow: function(rowID, commit) {
                            $.post(url_delete, {id: rowID})
                                    .done(function(data) {
                                        var response = jQuery.parseJSON(data);
                                        if (response.error)
                                            alert(response.error);
                                    })
                                    .fail(function() {
                                        alert("Não foi possível conectar ao servidor");
                                    });
                            commit(true);
                        }
                    };

            var dataAdapter = new $.jqx.dataAdapter(source);

            $("#table_esj_" + grid_name).jqxDataTable(
                    {
                        width: 850,
                        pageable: true,
                        pagerButtonsCount: 10,
                        source: dataAdapter,
                        columnsResize: true,
                        editable: true,
                        showToolbar: true,
                        altrows: true,
                        ready: function()
                        {
                            // called when the DataTable is loaded.         
                        },
                        pagerButtonsCount: 8,
                                toolbarHeight: 35,
                        renderToolbar: function(toolBar)
                        {
                            var toTheme = function(className) {
                                if (theme == "")
                                    return className;
                                return className + " " + className + "-" + theme;
                            }
                            // appends buttons to the status bar.
                            var container = $("<div style='overflow: hidden; position: relative; height: 100%; width: 100%;'></div>");
                            var buttonTemplate = "<div style='float: left; padding: 3px; margin: 2px;'><div style='margin: 4px; width: 16px; height: 16px;'></div></div>";
                            var addButton = $(buttonTemplate);
                            var editButton = $(buttonTemplate);
                            var deleteButton = $(buttonTemplate);
                            var cancelButton = $(buttonTemplate);
                            var updateButton = $(buttonTemplate);
                            container.append(addButton);
                            container.append(editButton);
                            container.append(deleteButton);
                            container.append(cancelButton);
                            container.append(updateButton);
                            toolBar.append(container);
                            addButton.jqxButton({cursor: "pointer", enableDefault: false, height: 25, width: 25});
                            addButton.find('div:first').addClass(toTheme('jqx-icon-plus'));
                            addButton.jqxTooltip({position: 'bottom', content: "Adicionar"});
                            editButton.jqxButton({cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25});
                            editButton.find('div:first').addClass(toTheme('jqx-icon-edit'));
                            editButton.jqxTooltip({position: 'bottom', content: "Editar"});
                            deleteButton.jqxButton({cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25});
                            deleteButton.find('div:first').addClass(toTheme('jqx-icon-delete'));
                            deleteButton.jqxTooltip({position: 'bottom', content: "Deletar"});
                            updateButton.jqxButton({cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25});
                            updateButton.find('div:first').addClass(toTheme('jqx-icon-save'));
                            updateButton.jqxTooltip({position: 'bottom', content: "Salvar"});
                            cancelButton.jqxButton({cursor: "pointer", disabled: true, enableDefault: false, height: 25, width: 25});
                            cancelButton.find('div:first').addClass(toTheme('jqx-icon-cancel'));
                            cancelButton.jqxTooltip({position: 'bottom', content: "Cancelar"});
                            var updateButtons = function(action) {
                                switch (action) {
                                    case "Select":
                                        addButton.jqxButton({disabled: false});
                                        deleteButton.jqxButton({disabled: false});
                                        editButton.jqxButton({disabled: false});
                                        cancelButton.jqxButton({disabled: true});
                                        updateButton.jqxButton({disabled: true});
                                        break;
                                    case "Unselect":
                                        addButton.jqxButton({disabled: false});
                                        deleteButton.jqxButton({disabled: true});
                                        editButton.jqxButton({disabled: true});
                                        cancelButton.jqxButton({disabled: true});
                                        updateButton.jqxButton({disabled: true});
                                        break;
                                    case "Edit":
                                        addButton.jqxButton({disabled: true});
                                        deleteButton.jqxButton({disabled: true});
                                        editButton.jqxButton({disabled: true});
                                        cancelButton.jqxButton({disabled: false});
                                        updateButton.jqxButton({disabled: false});
                                        break;
                                    case "End Edit":
                                        addButton.jqxButton({disabled: false});
                                        deleteButton.jqxButton({disabled: false});
                                        editButton.jqxButton({disabled: false});
                                        cancelButton.jqxButton({disabled: true});
                                        updateButton.jqxButton({disabled: true});
                                        break;
                                }
                            }
                            var rowIndex = null;
                            $("#table_esj_" + grid_name).on('rowSelect', function(event) {
                                var args = event.args;
                                rowIndex = args.index;
                                updateButtons('Select');
                            });
                            $("#table_esj_" + grid_name).on('rowUnselect', function(event) {
                                updateButtons('Unselect');
                            });
                            $("#table_esj_" + grid_name).on('rowEndEdit', function(event) {
                                updateButtons('End Edit');
                            });
                            $("#table_esj_" + grid_name).on('rowBeginEdit', function(event) {
                                updateButtons('Edit');
                            });
                            addButton.click(function(event) {
                                if (!addButton.jqxButton('disabled')) {
                                    // add new empty row.
                                    $("#table_esj_" + grid_name).jqxDataTable('addRow', null, {}, 'first');
                                    // select the first row and clear the selection.
                                    $("#table_esj_" + grid_name).jqxDataTable('clearSelection');
                                    $("#table_esj_" + grid_name).jqxDataTable('selectRow', 0);
                                    // edit the new row.
                                    $("#table_esj_" + grid_name).jqxDataTable('beginRowEdit', 0);
                                    updateButtons('add');
                                }
                            });
                            cancelButton.click(function(event) {
                                if (!cancelButton.jqxButton('disabled')) {
                                    // cancel changes.
                                    $("#table_esj_" + grid_name).jqxDataTable('endRowEdit', rowIndex, true);
                                }
                            });
                            updateButton.click(function(event) {
                                if (!updateButton.jqxButton('disabled')) {
                                    // save changes.
                                    $("#table_esj_" + grid_name).jqxDataTable('endRowEdit', rowIndex, false);
                                }
                            });
                            editButton.click(function() {
                                if (!editButton.jqxButton('disabled')) {
                                    $("#table_esj_" + grid_name).jqxDataTable('beginRowEdit', rowIndex);
                                    updateButtons('edit');
                                }
                            });
                            deleteButton.click(function() {
                                if (!deleteButton.jqxButton('disabled')) {
                                    $("#table_esj_" + grid_name).jqxDataTable('deleteRow', rowIndex);
                                    updateButtons('delete');
                                }
                            });
                        },
                        columns: columns
                    });
        }

    </script>
    <style>
        fieldset > div{
            clear:none;
            min-height:.2px;
            position: static;
        }
        #fieldsetMaster {
            border: 1px solid gray;
            border-color: #7F9494;
            margin-left: 15px;
            width: 98%;
        }
    </style>
</head>

<body>
    <?php
    echo $this->form()->openTag($this->form);
    if ($this->abas) {
        ?>
        <div id="tabs-forms">
            <ul>
                <?php
                $firstAba = null;
                foreach ($this->abas as $aba) {
                    if (!$firstAba) {
                        $firstAba = $aba;
                        if (isset($aba['grid_name'])) {
                            $firstTableName = $aba['grid_name'];
                        }
                    }
                    ?>
                    <li id="<?php echo $aba['id']; ?>li">
                        <?php if (isset($aba['grid_name'])) { ?>
                            <a href="#" onclick="abas_esj('#<?php echo $aba['id']; ?>', '<?php echo $aba['grid_name']; ?>');"><?php echo $aba['text'] ?>
                            <?php } else { ?>
                                <a href="#" onclick="abas_esj('#<?php echo $aba['id']; ?>')"><?php echo $aba['text'] ?> 
                                <?php } ?>
                            </a></li>
                    <?php
                }
                ?>
            </ul>
        </div>

        <fieldset id="fieldsetMaster">
            <?php
        }
        $i = 0;
        $x = 0;
        $tabelas = $this->tabela;
        $messageError = $this->form->getMessages();
        if (isset($partialElements)) {
            foreach ($this->partialElements as $element) {
                if (count($element) == 1) {
                    $class = 'esj_um';
                    $x++;
                } else if (count($element) == 2) {
                    $class = 'esj_dois';
                    $x++;
                } else if (count($element) == 3) {
                    $class = 'esj_tres';
                    $x++;
                }
                $i = 0;
                foreach ($element as $e) {
                    if (isset($e['openFieldset']))
                        echo $e['openFieldset'];
                    $error_position = 1;
                    if ($class == 'esj_um') {
                        ?>
                        <div class="esj_div"> 
                            <div class="esj_um">
                                <style>
                                    #<?php echo $e['name'] ?> {
                                        <?php if (!strstr($e['input'], 'textarea')) { ?>
                                            height: 25px;
                                        <?php } ?>
                                    }
                                </style>
                                <?php
                                if (isset($e['label']))
                                    echo $e['label'];
                                if (isset($e['input']))
                                    echo $e['input'];
                                if (isset($e['button']) && isset($e['button_id'])) {
                                    echo $e['button'];
                                    ?>
                                    <style>
                                        #<?php echo $e['button_id']; ?>{ 
                                            height: 20px; 
                                            margin-left:5px; 
                                            margin-top: 3px;
                                        }
                                    </style>
                                    <?php
                                }
                                if (isset($messageError[$e['name']])) {
                                    $messageErrorExib = array_pop($messageError[$e['name']]);
                                    ?> <result> <div class="esj_msg_error" style='margin-left:<?php echo $error_position . "%"; ?>'> <?php
                                    if (isset($messageErrorExib)) {
                                        echo "   <img src='" . BASE_URL . "/images/exclamacao.jpg'>   " . $messageErrorExib;
                                        unset($messageErrorExib);
                                    }
                                    ?> </result> </div> <?php
                                }
                                ?> </div> </div>
                            <?php
                        }
                        if ($class == 'esj_dois') {
                            if ($i == 0) {
                                $class_b = 'esj_left';
                            }
                            if ($i == 1) {
                                $class_b = 'esj_right';
                                $error_position = 4;
                            }
                            ?>
                    <div class="esj_div"> 
                        <div class="<?php echo $class_b; ?>">
                            <?php
                            if (isset($e['label']))
                                echo $e['label'];
                            if (isset($e['input']))
                                echo $e['input'];
                            if (isset($e['button']) && isset($e['button_id'])) {
                                echo $e['button'];
                                ?>
                                <style>
                                    #<?php echo $e['button_id']; ?>{ 
                                        height: 20px; 
                                        margin-left:5px; 
                                        margin-top: 3px;
                                    }
                                </style>
                                <?php
                            }
                            if (isset($messageError[$e['name']])) {
                                $messageErrorExib = array_pop($messageError[$e['name']]);
                                ?> <result> <div class="esj_msg_error" style='margin-left:<?php echo $error_position . "%"; ?>'> <?php
                                if (isset($messageErrorExib)) {
                                    echo "   <img src='" . BASE_URL . "/images/exclamacao.jpg'>   " . $messageErrorExib;
                                    unset($messageErrorExib);
                                }
                                ?> </result> </div> <?php
                            }
                            ?> 
                    </div> </div>
                <?php
            }
            if ($class == 'esj_tres') {
                if ($i == 0) {
                    $class_b = 'esj_left_trio';
                }
                if ($i == 1) {
                    $class_b = 'esj_middle_trio';
                    $error_position = 4;
                }
                if ($i == 2) {
                    $class_b = 'esj_right_trio';
                    $error_position = 4;
                }
                ?>
                <div class="esj_div">
                    <div class="<?php echo $class_b; ?>">
                        <?php
                        if (isset($e['label']))
                            echo $e['label'];
                        if (isset($e['input']))
                            echo $e['input'];
                        if (isset($e['button']) && isset($e['button_id'])) {
                            echo $e['button'];
                            ?>
                            <style>
                                #<?php echo $e['button_id']; ?>{ 
                                    height: 20px; 
                                    margin-left:5px; 
                                    margin-top: 3px;
                                }
                            </style>
                            <?php
                        }
                        if (isset($messageError[$e['name']])) {
                            $messageErrorExib = array_pop($messageError[$e['name']]);
                            ?> <result> <div class="esj_msg_error" style='margin-left:<?php echo $error_position . "%"; ?>'> <?php
                            if (isset($messageErrorExib)) {
                                echo "   <img src='" . BASE_URL . "/images/exclamacao.jpg'>   " . $messageErrorExib;
                                unset($messageErrorExib);
                            }
                            ?> </result> </div> <?php
                        }
                        ?> 
                </div> </div>
                <?php
            }
            $i++;
            if (isset($e['closeFieldset'])) {
                if ($tabelas) {
                    $tabela = array_shift($tabelas);
                    $nome_tabela = array_shift($tabela);
                    ?>
                    <div class='esj_div_table'>
                        <h5 class='title_esj' id='title_esj_<?php /* echo $nome_tabela; */ ?>'></h5>
                    </div>
                    <?php
                    echo "<div class='tabela_esj' id='table_esj_$nome_tabela'></div>";
                    $lines[] = $x;
                    $x = 0;
                }
                echo $e['closeFieldset'];
            }
        }
    }
}
?>
<div class="actions clearfix" id='botoes_esj'>
    <?php
    if (array_key_exists('botao', $this->form->getElements()))
        echo $this->formRow($this->form->get('botao'));
    if (array_key_exists('cancelar', $this->form->getElements()))
        echo $this->formButton($this->form->get('cancelar'));
    ?>
</div>
<?php
echo $this->form()->closeTag($this->form);


if (isset($firstAba['grid_name'])) {
    ?>
    <script>
        abas_esj('#<?php echo $firstAba['id'] ?>', '<?php echo $firstTableName; ?>');
    </script>
<?php } else { ?>
    <script>
        abas_esj('#<?php echo $firstAba['id'] ?>');
    </script>
<?php } ?>

<?php
if (isset($this->tabela) && isset($this->url) && isset($this->url_delete)) {
    foreach ($this->tabela as $chave => $tabelas) {
        $columns = array();
        if (isset($this->url[$chave]) && isset($this->url_delete[$chave])) {
            if ($this->url[$chave] != 'null') {
                $url = $this->url[$chave];
                $url_delete = $this->url_delete[$chave];
                $url = BASE_URL . $url;
                $url_delete = BASE_URL . $url_delete;
            }
        }
        $data_fields = array();
        $grid_name = array_shift($tabelas);

        foreach ($tabelas as $tabela) {
            $editable = true;
            if ($tabela['var'] == 'id')
                $editable = false;
            $columns[] = array('text' => $tabela['name'], 'dataField' => $tabela['var'], 'editable' => $editable);
            $data_fields[] = array('name' => $tabela['var'], 'type' => $tabela['type']);
        }
        $data_fields = json_encode($data_fields);
        $columns = json_encode($columns);
        ?>
        <style>
            #<?php echo "table_esj_" . $grid_name; ?>{
                <?php echo "margin-top: " . $lines[$chave] * 7 . "%;"; ?>
                margin-left: 1%;
                height: 100%;
            }
            #<?php echo "title_esj_" . $grid_name; ?> {
                <?php echo "margin-top: " . ((int) $lines[$chave] + 3) . "%;"; ?>
            }
        </style>
        <script>
            var data_fields = <?php echo $data_fields; ?>;

            var columns = <?php echo $columns; ?>;
            var grid_name = '<?php echo $grid_name; ?>';
            var url = '<?php echo $url; ?>';
            var url_delete = '<?php echo $url_delete; ?>';
            grid(data_fields, columns, grid_name, url, url_delete);
        </script>
        <?php
    }
}
?>
</fieldset>
</body>